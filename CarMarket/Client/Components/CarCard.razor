@inject ISnackbar SnackBar

<MudCard @onclick="OpenDialogAsync" Elevation="25" Class="rounded-lg pb-4" Style="@($"background-image: url('img/{Car.Make} {Car.Model} {Car.Year}.jpg'); background-size: cover; background-position: center; cursor: pointer;")">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h5" Align="Align.Center" Class="text-white">@Car.Make @Car.Model (@Car.Year)</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent Style="background-color: rgba(255, 255, 255, 0.8);">
        <MudText Typo="Typo.body1" Align="Align.Center">Color: @Car.Color</MudText>
        <MudText Typo="Typo.body1" Align="Align.Center">Mileage: @Car.Mileage km</MudText>
        <MudText Typo="Typo.body1" Align="Align.Center">Price: @Car.Price.ToString()$</MudText>
        <MudText Typo="Typo.body1" Align="Align.Center">Fuel Type: @Car.FuelType</MudText>
        <MudText Typo="Typo.body1" Align="Align.Center">Features: @string.Join(", ", Car.Features)</MudText>
    </MudCardContent>
</MudCard>

@code {
    [Parameter]
    public Car Car { get; set; }

    private async Task OpenDialogAsync()
    {
        var parameters = new DialogParameters<CarDialog>
        {
            { x => x.Car, Car }
        };

        var options = new DialogOptions()
            {
                CloseButton = true,
                MaxWidth = MaxWidth.ExtraLarge
            };

        var dialog = await DialogService.ShowAsync<CarDialog>("Formularz kontaktowy", parameters, options);
        var result = await dialog.Result;


        if (!result.Canceled)
        {
            SnackBar.Add("Formularz wys³any pomyœlnie!", Severity.Success);
        }
        else
        {
            SnackBar.Add("Nie wys³ano formularza", Severity.Warning);
        }
    }
}